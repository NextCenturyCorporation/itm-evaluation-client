# coding: utf-8

"""
    ITM TA3 API

    This is the specification of the TA3 API for In The Moment (ITM).  Currently, the Evaluation API for TA2 supports functionality for the Phase 1 Evaluation.  The API is based on the OpenAPI 3.0.3 specification.

    The version of the OpenAPI document: 0.4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from swagger_client.models.alignment_results import AlignmentResults

class TestAlignmentResults(unittest.TestCase):
    """AlignmentResults unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AlignmentResults:
        """Test AlignmentResults
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AlignmentResults`
        """
        model = AlignmentResults()
        if include_optional:
            return AlignmentResults(
                alignment_source = [
                    swagger_client.models.alignment_source.AlignmentSource(
                        scenario_id = '', 
                        probes = [
                            ''
                            ], )
                    ],
                alignment_target_id = '',
                score = 0,
                kdma_values = [
                    swagger_client.models.kdma_value.KDMA_Value(
                        kdma = '', 
                        value = 0.0, 
                        scores = [
                            0.0
                            ], 
                        kdes = {
                            'key' : swagger_client.models.kde_data.KDE_Data(
                                kde = '', 
                                label = '', )
                            }, )
                    ]
            )
        else:
            return AlignmentResults(
                alignment_source = [
                    swagger_client.models.alignment_source.AlignmentSource(
                        scenario_id = '', 
                        probes = [
                            ''
                            ], )
                    ],
                alignment_target_id = '',
                score = 0,
        )
        """

    def testAlignmentResults(self):
        """Test AlignmentResults"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
