# coding: utf-8

"""
    ITM TA3 API

    This is the specification of the TA3 API for In The Moment (ITM).  Currently, the Evaluation API for TA2 supports functionality for the Phase 1 Evaluation.  The API is based on the OpenAPI 3.0.3 specification.

    The version of the OpenAPI document: 0.4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from swagger_client.models.state import State

class TestState(unittest.TestCase):
    """State unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> State:
        """Test State
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `State`
        """
        model = State()
        if include_optional:
            return State(
                mission = swagger_client.models.mission.Mission(
                    unstructured = 'Place sensors in and around the jungle base', 
                    mission_type = 'Attack', 
                    character_importance = [
                        [{"Mike":"normal"},{"Intelligence Officer":"priority"}]
                        ], 
                    civilian_presence = 'none', 
                    communication_capability = 'both', 
                    roe = '', 
                    political_climate = '', 
                    medical_policies = [
                        'Treat All Neutrally'
                        ], ),
                environment = swagger_client.models.environment.Environment(
                    sim_environment = swagger_client.models.sim_environment.SimEnvironment(
                        unstructured = 'It was a dark and stormy night.', 
                        type = 'jungle', 
                        weather = 'clear', 
                        terrain = 'jungle', 
                        flora = 'none', 
                        fauna = 'none', 
                        temperature = -75.0, 
                        humidity = 0.0, 
                        lighting = 'none', 
                        visibility = 'none', 
                        noise_ambient = 'none', 
                        noise_peak = 'none', ), 
                    decision_environment = swagger_client.models.decision_environment.DecisionEnvironment(
                        unstructured = 'Injuries triggered by an IED detonation.  Helicopter Evac expected in one hour for up to three casualties.', 
                        aid = [
                            swagger_client.models.aid.Aid(
                                id = '', 
                                delay = 0, 
                                role = 1, 
                                patients_treated = [
                                    'Allied US'
                                    ], 
                                max_transport = 1, )
                            ], 
                        movement_restriction = 'unrestricted', 
                        sound_restriction = 'unrestricted', 
                        oxygen_levels = 'normal', 
                        population_density = 'none', 
                        injury_triggers = 'explosion', 
                        air_quality = 'green', 
                        city_infrastructure = '', ), ),
                supplies = [
                    {"type":"Tourniquet","quantity":4,"reusable":false}
                    ],
                unstructured = '',
                elapsed_time = 10,
                meta_info = swagger_client.models.meta_info.MetaInfo(
                    scene_id = '', 
                    probe_response = swagger_client.models.probe_response.ProbeResponse(
                        scenario_id = '', 
                        probe_id = '', 
                        choice = '', 
                        justification = '', ), ),
                events = [
                    swagger_client.models.event.Event(
                        unstructured = '', 
                        type = 'change', 
                        source = '', 
                        object = '', 
                        when = 1.337, 
                        action_id = '', 
                        relevant_state = [
                            'threat_state.threats[gunshots].threat_type'
                            ], )
                    ],
                threat_state = {"unstructured":"Gunshots have been reported in the surrounding area","threats":[{"type":"gunfire","severity":"moderate"}]},
                characters = [
                    swagger_client.models.character.Character()
                    ],
                scenario_complete = True
            )
        else:
            return State(
                environment = swagger_client.models.environment.Environment(
                    sim_environment = swagger_client.models.sim_environment.SimEnvironment(
                        unstructured = 'It was a dark and stormy night.', 
                        type = 'jungle', 
                        weather = 'clear', 
                        terrain = 'jungle', 
                        flora = 'none', 
                        fauna = 'none', 
                        temperature = -75.0, 
                        humidity = 0.0, 
                        lighting = 'none', 
                        visibility = 'none', 
                        noise_ambient = 'none', 
                        noise_peak = 'none', ), 
                    decision_environment = swagger_client.models.decision_environment.DecisionEnvironment(
                        unstructured = 'Injuries triggered by an IED detonation.  Helicopter Evac expected in one hour for up to three casualties.', 
                        aid = [
                            swagger_client.models.aid.Aid(
                                id = '', 
                                delay = 0, 
                                role = 1, 
                                patients_treated = [
                                    'Allied US'
                                    ], 
                                max_transport = 1, )
                            ], 
                        movement_restriction = 'unrestricted', 
                        sound_restriction = 'unrestricted', 
                        oxygen_levels = 'normal', 
                        population_density = 'none', 
                        injury_triggers = 'explosion', 
                        air_quality = 'green', 
                        city_infrastructure = '', ), ),
                supplies = [
                    {"type":"Tourniquet","quantity":4,"reusable":false}
                    ],
                unstructured = '',
                characters = [
                    swagger_client.models.character.Character()
                    ],
        )
        """

    def testState(self):
        """Test State"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
