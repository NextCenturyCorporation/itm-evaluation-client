# coding: utf-8

"""
    ITM TA3 API

    This is the specification of the TA3 API for In The Moment (ITM).  Currently, the Evaluation API for TA2 supports functionality for the Phase 1 Evaluation.  The API is based on the OpenAPI 3.0.3 specification.

    The version of the OpenAPI document: 0.4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from swagger_client.models.domain_conditions import DomainConditions

class TestDomainConditions(unittest.TestCase):
    """DomainConditions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DomainConditions:
        """Test DomainConditions
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DomainConditions`
        """
        model = DomainConditions()
        if include_optional:
            return DomainConditions(
                character_vitals = [
                    swagger_client.models.conditions_character_vitals.ConditionsCharacterVitals(
                        character_id = '', 
                        vitals = swagger_client.models.vitals.Vitals(
                            avpu = 'ALERT', 
                            ambulatory = True, 
                            mental_status = 'AGONY', 
                            breathing = 'NORMAL', 
                            heart_rate = 'NONE', 
                            triss = 0.0, 
                            spo2 = 'NORMAL', ), )
                    ],
                supplies = [{"type":"Tourniquet","quantity":1,"reusable":false}]
            )
        else:
            return DomainConditions(
        )
        """

    def testDomainConditions(self):
        """Test DomainConditions"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
