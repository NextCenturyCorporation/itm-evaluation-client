# coding: utf-8

"""
    ITM TA3 API

    This is the specification of the TA3 API for In The Moment (ITM).  Currently, the Evaluation API for TA2 supports functionality for the Phase 1 Evaluation.  The API is based on the OpenAPI 3.0.3 specification.

    The version of the OpenAPI document: 0.4.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from swagger_client.models.decision_environment import DecisionEnvironment

class TestDecisionEnvironment(unittest.TestCase):
    """DecisionEnvironment unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DecisionEnvironment:
        """Test DecisionEnvironment
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DecisionEnvironment`
        """
        model = DecisionEnvironment()
        if include_optional:
            return DecisionEnvironment(
                unstructured = 'Injuries triggered by an IED detonation.  Helicopter Evac expected in one hour for up to three casualties.',
                aid = [
                    swagger_client.models.aid.Aid(
                        id = '', 
                        delay = 0, 
                        type = 'local military', 
                        role = 1, 
                        patients_treated = [
                            'Allied US'
                            ], 
                        max_transport = 1, )
                    ],
                movement_restriction = 'unrestricted',
                sound_restriction = 'unrestricted',
                oxygen_levels = 'normal',
                population_density = 'none',
                injury_triggers = 'explosion',
                air_quality = 'green',
                city_infrastructure = ''
            )
        else:
            return DecisionEnvironment(
                unstructured = 'Injuries triggered by an IED detonation.  Helicopter Evac expected in one hour for up to three casualties.',
        )
        """

    def testDecisionEnvironment(self):
        """Test DecisionEnvironment"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
